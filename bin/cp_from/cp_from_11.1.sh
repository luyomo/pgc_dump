set session "db.db" to :db;
set session "db.ver" to :ver;
SET search_path TO 'pg_catalog', 'public';
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,nspname,nspowner,null as nspacl from pg_namespace  ) to '/tmp/pg_namespace.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,datname,datdba,encoding,datcollate,datctype,datistemplate,datallowconn,datconnlimit,datlastsysoid,datfrozenxid,datminmxid,dattablespace,null from pg_database  ) to '/tmp/pg_database.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,tableoid,relname,relnamespace,reltype,reloftype,relowner,relam,relfilenode,reltablespace,relpages,reltuples,relallvisible,reltoastrelid,relhasindex,relisshared,relpersistence,relkind,relnatts,relchecks,relhasoids,relhasrules,relhastriggers,relhassubclass,false as relrowsecurity,false as relforcerowsecurity,relispopulated,'n' as relreplident,false as relispartition,relrewrite,relfrozenxid,relminmxid,null,null,null from pg_class  ) to '/tmp/pg_class.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,spcname,spcowner,null,null from pg_tablespace  ) to '/tmp/pg_tablespace.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),a.* from pg_depend a ) to '/tmp/pg_depend.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),attrelid,attname,atttypid,attstattarget,attlen,attnum,attndims,attcacheoff,atttypmod,attbyval,attstorage,attalign,attnotnull,atthasdef,atthasmissing,attidentity,attisdropped,attislocal,attinhcount,attcollation,null as attacl,null as attoptions,null as attfdwoptions,null as attmissingval from pg_attribute  ) to '/tmp/pg_attribute.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),objoid,classoid,objsubid,privtype,null from pg_init_privs  ) to '/tmp/pg_init_privs.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,rolname,rolsuper,rolinherit,rolcreaterole,rolcreatedb,rolcanlogin,rolreplication,rolconnlimit,rolpassword,rolvaliduntil,rolbypassrls, null as rolconfig from pg_roles  ) to '/tmp/pg_roles.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,tableoid,typname,typnamespace,typowner,typlen,typbyval,typtype,typcategory,typispreferred,typisdefined,typdelim,typrelid,typelem,typarray,typinput,typoutput,typreceive,typsend,typmodin,typmodout,typanalyze,typalign,typstorage,typnotnull,typbasetype,typtypmod,typndims,typcollation,null as typdefaultbin,null as typdefault,null as typacl from pg_type  ) to '/tmp/pg_type.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,lanname,lanowner,lanispl,lanpltrusted,lanplcallfoid,laninline,lanvalidator,null as lanacl from pg_language  ) to '/tmp/pg_language.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,proname,pronamespace,proowner,prolang,procost,prorows,provariadic,protransform,prokind,prosecdef,proleakproof,proisstrict,proretset,provolatile,proparallel,pronargs,pronargdefaults,prorettype,proargtypes,null as proallargtypes,null as proargmodes,null as proargnames,null as proargdefaults,null as protrftypes,prosrc,probin,null as proconfig,null as proacl,pg_get_function_arguments(oid) AS funcargs, pg_get_function_identity_arguments(oid) AS funciargs, pg_get_function_result(oid) AS funcresult from pg_proc  ) to '/tmp/pg_proc.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),a.* from pg_sequence a ) to '/tmp/pg_sequence.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,tableoid,adrelid,adnum,null as adbin,pg_get_expr(adbin, adrelid) as adsrc from pg_attrdef  ) to '/tmp/pg_attrdef.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,tableoid,conname,connamespace,contype,condeferrable,condeferred,convalidated,conrelid,contypid,conindid,conparentid,confrelid,confupdtype,confdeltype,confmatchtype,conislocal,coninhcount,connoinherit,null as conkey,null as confkey,null as conpfeqop,null as conppeqop,null as conffeqop,null as conexclop,null as conbin,pg_get_constraintdef(oid) AS consrc,pg_get_constraintdef(oid, false) AS condef from pg_constraint  ) to '/tmp/pg_constraint.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),indexrelid,indrelid,indnatts,indnkeyatts,indisunique,indisprimary,indisexclusion,indimmediate,indisclustered,indisvalid,indcheckxmin,indisready,indislive,indisreplident,indkey,indcollation,indclass,indoption,null as indexprs,null as indpred,pg_get_indexdef(indexrelid) AS indexdef from pg_index  ) to '/tmp/pg_index.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),oid,tgrelid,tgname,tgfoid,tgtype,tgenabled,tgisinternal,tgconstrrelid,tgconstrindid,tgconstraint,tgdeferrable,tginitdeferred,tgnargs,tgattr,tgargs,null as tgqual,tgoldtable,tgnewtable,pg_get_triggerdef(oid, false) AS tgdef from pg_trigger  ) to '/tmp/pg_trigger.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),a.oid,a.* from pg_cast a ) to '/tmp/pg_cast.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),a.oid,a.* from pg_transform a ) to '/tmp/pg_transform.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),i.oid,pg_get_viewdef(i.oid::pg_catalog.oid) AS viewdef from pg_class i where relkind = 'v' ) to '/tmp/pg_view_def.csv' with(format csv, delimiter ';', quote '"' );
\copy (select current_setting('db.db'),current_setting('db.ver'),1,a.* from pg_inherits a ) to '/tmp/pg_inherits.csv' with(format csv, delimiter ';', quote '"' );
